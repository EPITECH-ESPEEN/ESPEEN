name: CI/CD Pipeline

on:
  push:
    branches:
      - main
    paths-ignore:
      - "**.md"
      - "**.txt"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test_and_mirror_code:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0

      - uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE}}

      # Testing
      - name: Configure
        run: |
          export ENV_PASSWORD="${{ secrets.ENV_PASSWORD }}"
          ./configure -m dev -n

      - name: Install
        run: |
          sudo apt-get install -y openssh-client zip
          sudo pip3 install -r ./scripts/requirements.txt

      - name: Start docker
        run: |
          docker compose up -d

      - name: Run tests
        id: run_tests
        run: |
          set +e
          echo "TEST_OUTPUT<<EOF" >> "$GITHUB_OUTPUT"
          cd ./scripts/

          python3 ./run_tests.py 2>> "$GITHUB_OUTPUT"
          exit_code=$?

          echo "EOF" >> "$GITHUB_OUTPUT"

          set -e
          exit $exit_code

      - name: Stop docker compose
        run: |
          docker compose down

      - name: Deploy modification to production repository
        run: |
          SSH_KEY=$(mktemp)
          echo "${{ secrets.DEPLOYEMENT_PRIVATE_KEY }}" > "$SSH_KEY"

          ZIP_FILE=$(mktemp /tmp/tmp.XXXXXXXX.zip)
          rm "$ZIP_FILE"
          zip -r "$ZIP_FILE" ./backend/ ./frontend/ ./mobile/ ./docker/ ./.env ./init-mongo.js
          scp -i "$SSH_KEY" -o StrictHostKeyChecking=no "$ZIP_FILE" ${{ secrets.SSH_USER }}@${{ secrets.DEPLOYEMENT_HOST }}:"/tmp/espeen.zip"
          ssh -i "$SSH_KEY" -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.DEPLOYEMENT_HOST }} << 'EOF'
            sudo /usr/bin/rm -rf /opt/espeen/espeen/*
            unzip "/tmp/espeen.zip" -d /opt/espeen/espeen/
            sudo systemctl restart espeen
          EOF

      # Manually mirror, to have env and stuff
      - name: Mirror repository to target repo
        run: |
          mv ./.mirrorignore ./.gitignore
          git submodule update --init --recursive
          git rm --cached backend
          rm ./backend/.git
          git rm --cached frontend
          rm ./frontend/.git
          git rm --cached mobile
          rm ./mobile/.git
          mkdir -p ~/.ssh/
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          git config --global user.name "${{ github.event.commits[0].author.username }}"
          git config --global user.email "${{ github.event.commits[0].author.email }}"
          chmod 600 ~/.ssh/id_rsa
          export GIT_SSH_COMMAND="ssh -v -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no -l git"
          git clone "${{ secrets.TARGET_REPOSITORY }}" /tmp/espeen_prod/
          rm -rf ./.git/
          cp -r /tmp/espeen_prod/.git/ ./.git/
          git add .
          git commit -m "${{ github.event.head_commit.message }}"
          git push

      - name: Send build report to Discord
        uses: tsickert/discord-webhook@v6.0.0
        with:
          webhook-url: ${{ secrets.WEBHOOK_URL }}
          username: "Github - ${{ github.actor }}"
          avatar-url: "https://github.com/${{ github.actor }}.png"
          embed-title: ":white_check_mark: **Action Successful** :white_check_mark:"
          embed-author-name: ${{ github.actor }}
          embed-color: 7844437
          embed-url: "${{ github.event.head_commit.url }}"
          embed-author-url: "https://github.com/${{ github.actor }}"
          embed-author-icon-url: "https://github.com/${{ github.actor }}.png"
          embed-description: "**${{ github.event.repository.owner.name }}/${{ github.event.repository.name }}**

[${{ github.event.head_commit.message }}](${{ github.event.head_commit.url }})

```ansi

${{ steps.run_tests.outputs.TEST_OUTPUT }}

```

Commit ID: ${{ github.event.head_commit.id }}

Pushed by ${{ github.event.pusher.email }}

Find logs [here](https://github.com/EPITECH-ESPEEN/ESPEEN/actions/workflows/cicd.yaml)"

      - name: Send error message to Discord on failure
        if: always() && failure()
        uses: tsickert/discord-webhook@v6.0.0
        with:
          webhook-url: ${{ secrets.WEBHOOK_URL }}
          username: "Github - ${{ github.actor }}"
          avatar-url: "https://github.com/${{ github.actor }}.png"
          embed-title: ":x: **Action failed** :x:"
          embed-author-name: ${{ github.actor }}
          embed-color: 16273737
          embed-url: "${{ github.event.head_commit.url }}"
          embed-author-url: "https://github.com/${{ github.actor }}"
          embed-author-icon-url: "https://github.com/${{ github.actor }}.png"
          embed-description: "**${{ github.event.repository.owner.name }}/${{ github.event.repository.name }}**

[${{ github.event.head_commit.message }}](${{ github.event.head_commit.url }})

```ansi

${{ steps.run_tests.outputs.TEST_OUTPUT }}

```

Commit ID: ${{ github.event.head_commit.id }}

Pushed by ${{ github.event.pusher.email }}

Find logs [here](https://github.com/EPITECH-ESPEEN/ESPEEN/actions/workflows/cicd.yaml)"