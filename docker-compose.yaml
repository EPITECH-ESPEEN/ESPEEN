services:
  db:
    image: mongo:latest
    env_file:
      - ./.env
    container_name: area-db
    restart: always
    networks:
      area:
        ipv4_address: ${DATABASE_HOST}
    volumes:
      - "./data/:/data/db"

  backend:
    build:
      context: ./backend/
      dockerfile: ./docker/Dockerfile.backend.prod
    env_file:
      - ./.env
    container_name: area-backend
    restart: always
    networks:
      area:
        ipv4_address: ${BACKEND_HOST}
    depends_on:
      - db

  frontend:
    build:
      context: ./frontend/
      dockerfile: ./docker/Dockerfile.frontend.prod
    env_file:
      - ./.env
    container_name: area-frontend
    restart: always
    ports:
      - "80:80"
    networks:
      area:
        ipv4_address: ${FRONTEND_HOST}
    depends_on:
      - db
      - backend

networks:
  area:
    driver: bridge
    ipam:
      config:
        - subnet: ${NETWORK_SUBNET}
          gateway: ${NETWORK_GATEWAY}