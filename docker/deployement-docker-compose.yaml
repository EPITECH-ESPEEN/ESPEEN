services:
  server:
    build:
      context: ./
      dockerfile: ./docker/Dockerfile.backend.dev
    env_file:
      - ./.env
    environment:
      - PORT=${BACKEND_PORT}
      - NODE_ENV=DEV
      - FRONT_URL=http://${DOMAIN_NAME}:${FRONTEND_PORT}
      # Including ngrok:
      # - FRONT_URL="https://${NGROK_URL}/"
      - DB_URI=${DB_URI}
      - DB_LOCAL_URI=${DB_URI}
      - JWT_SECRET=${SECRET_ALPHA}
      - JWT_EXPIRES_TIME=${JWT_EXPIRE_TIME}
      - COOKIE_EXPIRES_TIME=${COOKIE_EXPIRES_TIME}
      - CLIENT_ID=${CLIENT_ID}
      - CLIENT_SECRET=${CLIENT_SECRET}
      - WEATHER_API_KEY=${WEATHER_API_KEY}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - GOOGLE_CALLBACK=${GOOGLE_CALLBACK}
      - SESSION_SECRET=${SECRET_BRAVO}
      - DISCORD_CLIENT_ID=${DISCORD_CLIENT_ID}
      - DISCORD_CLIENT_SECRET=${DISCORD_CLIENT_SECRET}
      - DISCORD_URI=${DISCORD_URI}
      - DISCORD_CALLBACK_URL=${DISCORD_CALLBACK_URL}
      - DISCORD_BOT_TOKEN=${DISCORD_BOT_TOKEN}
      - GITHUB_CLIENT_ID=${GITHUB_CLIENT_ID}
      - GITHUB_CLIENT_SECRET=${GITHUB_CLIENT_SECRET}
      - GITHUB_TOKEN=${GITHUB_TOKEN}
      - FACEBOOK_CLIENT_ID=${FACEBOOK_CLIENT_ID}
      - FACEBOOK_CLIENT_SECRET=${FACEBOOK_CLIENT_SECRET}
      - FACEBOOK_CALLBACK_URL=${FACEBOOK_CALLBACK_URL}
      - TWITCH_CLIENT_ID=${TWITCH_CLIENT_ID}
      - TWITCH_CLIENT_SECRET=${TWITCH_CLIENT_SECRET}
      - TWITCH_URI=${TWITCH_URI}
      - TWITCH_CALLBACK_URL=${TWITCH_CALLBACK_URL}
      - TWITCH_WEBHOOK_SECRET=${TWITCH_WEBHOOK_SECRET}
      - TWITCH_WEBHOOK_CALLBACK=${TWITCH_WEBHOOK_CALLBACK}
    container_name: area-backend
    restart: always
    ports:
      - "8080:${BACKEND_PORT}"
    networks:
      area:
        ipv4_address: ${BACKEND_HOST}
    volumes:
      - "./backend/:/app/"

  client_mobile:
    build:
      context: ./
      dockerfile: ./docker/Dockerfile.frontend.dev
    env_file:
      - ./.env
    environment:
      - PORT=${MOBILE_PORT}
      - NODE_ENV=DEV
      - BACKEND_URL="http://${DOMAIN_NAME}:${BACKEND_PORT}/"
      - SHARED_VOLUME="/data/shared_volume/"
      # Including ngrok:
      # - BACKEND_URL="https://${NGROK_URL}/backend/"
    container_name: area-mobile
    restart: always
    ports:
      - "8082:${MOBILE_PORT}"
    networks:
      area:
        ipv4_address: ${MOBILE_HOST}
    volumes:
      - "./mobile/:/app/"
      - "./data/shared_volume/:/data/shared_volume/"
    depends_on:
      - server

  client_web:
    build:
      context: ./
      dockerfile: ./docker/Dockerfile.frontend.dev
    env_file:
      - ./.env
    environment:
      - PORT=${FRONTEND_PORT}
      - NODE_ENV=DEV
      - BACKEND_URL="http://${DOMAIN_NAME}:${BACKEND_PORT}/"
      - SHARED_VOLUME="/data/shared_volume/"
      # Including ngrok:
      # - BACKEND_URL="https://${NGROK_URL}/backend/"
    container_name: area-web
    restart: always
    ports:
      - "8081:${FRONTEND_PORT}"
    networks:
      area:
        ipv4_address: ${FRONTEND_HOST}
    volumes:
      - "./frontend/:/app/"
      - "./data/shared_volume/:/data/shared_volume/"
      # - "./data/mobile/:/opt/mobile_build/"
      # Don't you dare
    depends_on:
      - client_mobile
      - server

  # Save this \/ for deployement.
  # Don't want those to run in AT or in unit tests

  nginx:
    env_file:
      - ./.env
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      area:
        ipv4_address: ${NGINX_HOST}
    depends_on:
      - server
      - client_web
      - client_mobile

  ngrok:
    env_file:
      - ./.env
    image: ngrok/ngrok:latest
    container_name: ngrok
    command:
      - "http"
      - "--url=${NGROK_URL}"
      - "http://${NGINX_HOST}:80"
    environment:
      NGROK_AUTHTOKEN: ${NGROK_AUTHTOKEN}
    networks:
      area:
        ipv4_address: ${NGROK_HOST}
    depends_on:
      - server
      - client_web
      - client_mobile
      - nginx

networks:
  area:
    driver: bridge
    ipam:
      config:
        - subnet: ${NETWORK_SUBNET}
          gateway: ${NETWORK_GATEWAY}