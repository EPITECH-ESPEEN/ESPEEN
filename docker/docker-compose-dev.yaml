services:
  db:
    image: mongo:latest
    env_file:
      - ./.env
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${DATABASE_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${DATABASE_PASSWORD}
      - MONGO_INITDB_DATABASE=${DATABASE_NAME}
    container_name: area-db
    restart: always
    ports:
      - "27017:27017"
    networks:
      area:
        ipv4_address: ${DATABASE_HOST}
    volumes:
      - "./data/:/data/db"
      - "./init-mongo.js:/docker-entrypoint-initdb.d/mongo-init.js:ro"

  server:
    build:
      context: ./
      dockerfile: ./docker/Dockerfile.backend.dev
    env_file:
      - ./.env
    environment:
      - PORT=${BACKEND_PORT}
      - NODE_ENV=DEV
    container_name: area-backend
    restart: always
    ports:
      - "8080:${BACKEND_PORT}"
    networks:
      area:
        ipv4_address: ${BACKEND_HOST}
    volumes:
      - "./backend/:/app/"
    depends_on:
      - db

  client_mobile:
    build:
      context: ./
      dockerfile: ./docker/Dockerfile.frontend.dev
    env_file:
      - ./.env
    environment:
      - PORT=${MOBILE_PORT}
      - NODE_ENV=DEV
    container_name: area-mobile
    restart: always
    ports:
      - "8082:${MOBILE_PORT}"
    networks:
      area:
        ipv4_address: ${MOBILE_HOST}
    volumes:
      - "./mobile/:/app/"
    depends_on:
      - db
      - server

  client_web:
    build:
      context: ./
      dockerfile: ./docker/Dockerfile.frontend.dev
    env_file:
      - ./.env
    environment:
      - PORT=${FRONTEND_PORT}
      - NODE_ENV=DEV
    container_name: area-web
    restart: always
    ports:
      - "8081:${FRONTEND_PORT}"
    networks:
      area:
        ipv4_address: ${FRONTEND_HOST}
    volumes:
      - "./frontend/:/app/"
    depends_on:
      - db
      - client_mobile
      - server

networks:
  area:
    driver: bridge
    ipam:
      config:
        - subnet: ${NETWORK_SUBNET}
          gateway: ${NETWORK_GATEWAY}