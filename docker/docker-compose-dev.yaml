services:
  # Using online DB
  # db:
  #   image: mongo:latest
  #   env_file:
  #     - ./.env
  #   environment:
  #     - MONGO_INITDB_ROOT_USERNAME=${DATABASE_USERNAME}
  #     - MONGO_INITDB_ROOT_PASSWORD=${DATABASE_PASSWORD}
  #     - MONGO_INITDB_DATABASE=${DATABASE_NAME}
  #   container_name: area-db
  #   restart: always
  #   ports:
  #     - "27017:27017"
  #   networks:
  #     area:
  #       ipv4_address: ${DATABASE_HOST}
  #   volumes:
  #     - "./data/db/:/data/db"
  #     - "./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js"

  server:
    build:
      context: ./
      dockerfile: ./docker/Dockerfile.backend.dev
    env_file:
      - ./.env
    environment:
      - PORT=${BACKEND_PORT}
      - NODE_ENV=DEV
      - FRONT_URL=http://${DOMAIN_NAME}:${FRONTEND_PORT}
      - DB_LOCAL_URI=${DB_URI}
      - DB_URI=${DB_URI}
      - JWT_SECRET=${SECRET_ALPHA}
      - JWT_EXPIRES_TIME=${JWT_EXPIRE_TIME}
      - COOKIE_EXPIRES_TIME=${COOKIE_EXPIRES_TIME}
      - CLIENT_ID=${CLIENT_ID}
      - CLIENT_SECRET=${CLIENT_SECRET}
      - WEATHER_API_KEY=${WEATHER_API_KEY}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - GOOGLE_CALLBACK=${GOOGLE_CALLBACK}
      - SESSION_SECRET=${SECRET_BRAVO}
      - DISCORD_CLIENT_ID=${DISCORD_CLIENT_ID}
      - DISCORD_CLIENT_SECRET=${DISCORD_CLIENT_SECRET}
      - DISCORD_URI=${DISCORD_URI}
      - DISCORD_CALLBACK_URL=${DISCORD_CALLBACK_URL}
      - DISCORD_BOT_TOKEN=${DISCORD_BOT_TOKEN}
      - GITHUB_CLIENT_ID=${GITHUB_CLIENT_ID}
      - GITHUB_CLIENT_SECRET=${GITHUB_CLIENT_SECRET}
      - GITHUB_TOKEN=${GITHUB_TOKEN}
      - FACEBOOK_CLIENT_ID=${FACEBOOK_CLIENT_ID}
      - FACEBOOK_CLIENT_SECRET=${FACEBOOK_CLIENT_SECRET}
      - FACEBOOK_CALLBACK_URL=${FACEBOOK_CALLBACK_URL}
      - TWITCH_CLIENT_ID=${TWITCH_CLIENT_ID}
      - TWITCH_CLIENT_SECRET=${TWITCH_CLIENT_SECRET}
      - TWITCH_URI=${TWITCH_URI}
      - TWITCH_CALLBACK_URL=${TWITCH_CALLBACK_URL}
      - TWITCH_WEBHOOK_SECRET=${TWITCH_WEBHOOK_SECRET}
      - TWITCH_WEBHOOK_CALLBACK=${TWITCH_WEBHOOK_CALLBACK}
    container_name: area-backend
    restart: always
    ports:
      - "8080:${BACKEND_PORT}"
    networks:
      area:
        ipv4_address: ${BACKEND_HOST}
    volumes:
      - "./backend/:/app/"
    depends_on:
      - db

  client_mobile:
    build:
      context: ./
      dockerfile: ./docker/Dockerfile.frontend.dev
    env_file:
      - ./.env
    environment:
      - PORT=${MOBILE_PORT}
      - NODE_ENV=DEV
      - BACKEND_URL="http://${DOMAIN_NAME}:${BACKEND_PORT}/"
    container_name: area-mobile
    restart: always
    ports:
      - "8082:${MOBILE_PORT}"
    networks:
      area:
        ipv4_address: ${MOBILE_HOST}
    volumes:
      - "./mobile/:/app/"
    depends_on:
      - db
      - server

  client_web:
    build:
      context: ./
      dockerfile: ./docker/Dockerfile.frontend.dev
    env_file:
      - ./.env
    environment:
      - PORT=${FRONTEND_PORT}
      - NODE_ENV=DEV
      - BACKEND_URL="http://${DOMAIN_NAME}:${BACKEND_PORT}/"
    container_name: area-web
    restart: always
    ports:
      - "8081:${FRONTEND_PORT}"
    networks:
      area:
        ipv4_address: ${FRONTEND_HOST}
    volumes:
      - "./frontend/:/app/"
      # - "./data/mobile/:/opt/mobile_build/"
      # Don't you dare
    depends_on:
      - db
      - client_mobile
      - server

  admin_panel:
    image: mongo-express:1.0.2-18
    env_file:
      - ./.env
    environment:
      - ME_CONFIG_MONGODB_URL=${DB_URI}
      - ME_CONFIG_BASICAUTH_USERNAME=${ADMIN_USERNAME}
      - ME_CONFIG_BASICAUTH_PASSWORD=${ADMIN_PASSWORD}
      - ME_CONFIG_MONGODB_ENABLE_ADMIN="true"
      - ME_CONFIG_OPTIONS_EDITORTHEME="dracula"
    container_name: area-admin-panel
    restart: always
    ports:
      - "8083:8081"
    networks:
      area:
        ipv4_address: ${ADMIN_PANEL_HOST}
    depends_on:
      - db
      - client_mobile
      - client_web
      - server

networks:
  area:
    driver: bridge
    ipam:
      config:
        - subnet: ${NETWORK_SUBNET}
          gateway: ${NETWORK_GATEWAY}
